<?php

/**
 * @file
 * Creates taxonomy terms based on the Genres field's input.
 */

declare(strict_types = 1);
//AKTUAL
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\NodeInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Contains hooks and callbacks for genres_to_terms.module.
 */
function genres_to_terms_entity_presave(EntityInterface $entity): void {
  if ($entity instanceof NodeInterface && $entity->bundle() === 'product') {
    $vid = 'genres';
    $inputs = preg_split('/\s+/',$entity->get('field_genres')->value, -1, PREG_SPLIT_NO_EMPTY);
    //$inputs = explode(' ', trim($entity->get('field_genres')->value));

    $terms = Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties([
      'vid' => $vid,
      'name' => $inputs,
    ]);
    $termnames = [];
    foreach ($terms as $term) {
      $termnames[$term->getName()] = $term;
    }
    $term_ids = [];
    foreach ($inputs as $input) {
      if (empty($termnames[$input])) {
        $term = Term::create([
          'name' => $input,
          'vid' => 'genres',
        ]);
        $term->save();
        $termnames[$input] = $term;
      }
      $term_ids[] = ['target_id' => $termnames[$input]->id()];
    }
    $entity->set('field_genre_tags', $term_ids);
  }
}
